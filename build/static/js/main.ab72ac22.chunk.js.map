{"version":3,"sources":["Persons.js","Filter.js","PersonForm.js","Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","filterValue","deletePerson","filter","person","name","toLowerCase","includes","map","key","number","onClick","id","Filter","setFilterValue","type","value","onChange","e","target","PersonForm","addPerson","newName","setNewName","newPhoneNumber","setNewPhoneNumber","onSubmit","Notification","message","style","color","background","padding","border","borderRadius","margin","baseUrl","a","request","axios","delete","result","data","create","newObject","post","response","update","put","App","useState","loading","setLoading","setPersons","successMessage","setSuccessMessage","useEffect","get","then","resetInputValue","preventDefault","length","isDuplicate","alert","personService","setTimeout","window","confirm","splice","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAEaA,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9C,OACE,kBAAC,WAAD,KACGF,EACEG,QACC,SAACC,GAAD,OAAgE,IAApDA,EAAOC,KAAKC,cAAcC,SAASN,MAEhDO,KAAI,SAACJ,GAAD,OACH,yBAAKK,IAAG,WAAML,EAAOC,OACnB,0BAAMI,IAAKL,EAAOC,MACfD,EAAOC,KADV,IACiBD,EAAOM,QAExB,4BAAQD,IAAG,WAAML,EAAOC,MAAQM,QAAS,kBAAMT,EAAaE,EAAOQ,GAAIR,EAAOC,QAA9E,gBCZCQ,EAAS,SAAC,GAAqC,IAAnCZ,EAAkC,EAAlCA,YAAaa,EAAqB,EAArBA,eACpC,OACE,kDACqB,IACnB,2BACEC,KAAK,SACLC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAOJ,EAAeI,EAAEC,OAAOH,MAAMV,oBCP1Cc,EAAa,SAAC,GAAyE,IAAxEC,EAAuE,EAAvEA,UAAWC,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,kBAC1E,OACE,0BAAMC,SAAU,SAACR,GAAD,OAAOG,EAAUH,KAC/B,uCACA,qCACQ,IACN,2BAAOF,MAAOM,EAASL,SAAU,SAACC,GAAD,OAAOK,EAAWL,EAAEC,OAAOH,WAE9D,uCACU,IACR,2BACEA,MAAOQ,EACPP,SAAU,SAACC,GAAD,OAAOO,EAAkBP,EAAEC,OAAOH,WAGhD,6BACE,4BAAQD,KAAK,UAAb,UChBKY,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAS7B,OAAgB,OAAZA,EACK,KAGF,yBAAKC,MAZS,CACnBC,MAAO,yBACPC,WAAY,yBACZC,QAAS,OACTC,OAAQ,mCACRC,aAAc,MACdC,OAAQ,SAMwBP,I,uBCd9BQ,EAAU,4DAEVlC,EAAY,uCAAG,WAAOU,GAAP,iBAAAyB,EAAA,6DACbC,EAAUC,IAAMC,OAAN,UAAgBJ,EAAhB,YAA2BxB,IADxB,SAEE0B,EAFF,cAEbG,EAFa,yBAGZA,EAAOC,MAHK,2CAAH,sDAkBH,GAAEC,OAZL,uCAAG,WAAOC,GAAP,iBAAAP,EAAA,6DACPC,EAAUC,IAAMM,KAAKT,EAASQ,GADvB,SAEUN,EAFV,cAEPQ,EAFO,yBAGNA,EAASJ,MAHH,2CAAH,sDAYaK,OANb,uCAAG,WAAOnC,EAAIgC,GAAX,iBAAAP,EAAA,6DACPC,EAAUC,IAAMS,IAAN,UAAaZ,EAAb,YAAwBxB,GAAMgC,GADjC,SAEUN,EAFV,cAEPQ,EAFO,yBAGNA,EAASJ,MAHH,2CAAH,wDAMqBxC,gBCyDlB+C,EAtEH,WACV,IADgB,EAEcC,oBAAS,GAFvB,mBAETC,EAFS,KAEAC,EAFA,OAGcF,mBAAS,IAHvB,mBAGTlD,EAHS,KAGAqD,EAHA,OAIcH,mBAAS,IAJvB,mBAIT5B,EAJS,KAIAC,EAJA,OAK4B2B,mBAAS,IALrC,mBAKT1B,EALS,KAKOC,EALP,OAMsByB,mBAAS,IAN/B,mBAMTjD,EANS,KAMIa,EANJ,OAO4BoC,mBAAS,IAPrC,mBAOTI,EAPS,KAOOC,EAPP,KAShBC,qBAAU,WACRjB,IAAMkB,IATQ,6DASKC,MAAK,SAACZ,GACvBO,EAAWP,EAASJ,MACpBU,GAAW,QAEZ,CAACD,IAEJ,IAeMQ,EAAkB,WACtBpC,EAAW,IACXE,EAAkB,KAepB,OACE,6BACE,yCACC6B,EAAiB,kBAAC,EAAD,CAAc1B,QAAS0B,IAAqB,KAC9D,kBAAC,EAAD,CAAQrD,YAAaA,EAAaa,eAAgBA,IAClD,kBAAC,EAAD,CACEO,UAnBY,SAACH,GAEjB,GADAA,EAAE0C,iBAVgB,SAAC5D,EAASK,GAE5B,OAAoB,IADPL,EAAQG,QAAO,SAACC,GAAD,OAAYA,EAAOC,OAASA,KAC/CwD,OASLC,CAAY9D,EAASsB,GAEvB,OADAyC,MAAM,GAAD,OAAIzC,EAAJ,mCACEqC,IAETK,EAAcrB,OAAO,CAAEtC,KAAMiB,EAASZ,OAAQc,IAC9C6B,EAAW,GAAD,mBAAKrD,GAAL,CAAc,CAAEK,KAAMiB,EAASZ,OAAQc,MACjD4B,GAAW,GACXG,EAAkB,SAAD,OAAUjC,IAC3B2C,YAAW,kBAAMV,EAAkB,MAAK,KACxCI,KASIrC,QAASA,EACTC,WAAYA,EACZC,eAAgBA,EAChBC,kBAAmBA,IAErB,uCACA,kBAAC,EAAD,CACEzB,QAASA,EACTC,YAAaA,EACbC,aAhDe,SAACU,EAAIP,GACxB,GAAI6D,OAAOC,QAAP,iBAAyB9D,EAAzB,OAIF,OAHA2D,EAAc9D,aAAaU,GAC3ByC,EAAWrD,EAAQoE,OAAOxD,EAAK,EAAG,SAClCwC,GAAW,GAGbiB,QAAQC,IAAI,mBC3BhBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ab72ac22.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nexport const Persons = ({ persons, filterValue, deletePerson }) => {\n  return (\n    <Fragment>\n      {persons\n        .filter(\n          (person) => person.name.toLowerCase().includes(filterValue) === true\n        )\n        .map((person) => (\n          <div key={`d${person.name}`}>\n            <span key={person.name}>\n              {person.name} {person.number}\n            </span>\n            <button key={`b${person.name}`} onClick={() => deletePerson(person.id, person.name)}>delete</button>\n          </div>\n        ))}\n    </Fragment>\n  );\n};\n","import React from \"react\";\n\nexport const Filter = ({ filterValue, setFilterValue }) => {\n  return (\n    <div>\n      filter shown with:{\" \"}\n      <input\n        type=\"search\"\n        value={filterValue}\n        onChange={(e) => setFilterValue(e.target.value.toLowerCase())}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const PersonForm = ({addPerson, newName, setNewName, newPhoneNumber, setNewPhoneNumber}) => {\n  return (\n    <form onSubmit={(e) => addPerson(e)}>\n      <h2>Add new</h2>\n      <div>\n        name:{\" \"}\n        <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={newPhoneNumber}\n          onChange={(e) => setNewPhoneNumber(e.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\n\nexport const Notification = ({ message }) => {\n  const messageStyle = {\n    color: 'hsl(146.7,46.4%,15.1%)',\n    background: 'hsl(146.7,46.4%,85.1%)',\n    padding: '1rem',\n    border: '3px solid hsl(146.7,46.4%,15.1%)',\n    borderRadius: '5px',\n    margin: '1rem'\n  }\n  if (message === null) {\n    return null;\n  }\n\n  return <div style={messageStyle}>{message}</div>;\n};\n","import axios from \"axios\";\nconst baseUrl = \"https://glacial-anchorage-35014.herokuapp.com/api/persons\";\n\nconst deletePerson = async (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  const result = await request;\n  return result.data\n};\n\nconst create = async (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  const response = await request;\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  const response = await request;\n  return response.data;\n};\n\nexport default { create, update, deletePerson };\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Persons } from \"./Persons\";\nimport { Filter } from \"./Filter\";\nimport { PersonForm } from \"./PersonForm\";\nimport { Notification } from \"./Notification\";\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const baseUrl = \"https://glacial-anchorage-35014.herokuapp.com/api/persons\";\n  const [loading, setLoading] = useState(false);\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhoneNumber, setNewPhoneNumber] = useState(\"\");\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(baseUrl).then((response) => {\n      setPersons(response.data);\n      setLoading(false);\n    });\n  }, [loading]);\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      personService.deletePerson(id);\n      setPersons(persons.splice(id - 1, 1));\n      setLoading(true);\n      return;\n    }\n    console.log(\"no clicked\");\n  };\n\n  const isDuplicate = (persons, name) => {\n    const data = persons.filter((person) => person.name === name);\n    if (data.length === 0) return false;\n    return true;\n  };\n  const resetInputValue = () => {\n    setNewName(\"\");\n    setNewPhoneNumber(\"\");\n  };\n  const addPerson = (e) => {\n    e.preventDefault();\n    if (isDuplicate(persons, newName)) {\n      alert(`${newName} is already added to phonebook`);\n      return resetInputValue();\n    }\n    personService.create({ name: newName, number: newPhoneNumber });\n    setPersons([...persons, { name: newName, number: newPhoneNumber }]);\n    setLoading(true);\n    setSuccessMessage(`Added ${newName}`);\n    setTimeout(() => setSuccessMessage(\"\"), 2000);\n    resetInputValue();\n  };\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {successMessage ? <Notification message={successMessage} /> : null}\n      <Filter filterValue={filterValue} setFilterValue={setFilterValue} />\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        setNewName={setNewName}\n        newPhoneNumber={newPhoneNumber}\n        setNewPhoneNumber={setNewPhoneNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        filterValue={filterValue}\n        deletePerson={deletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}